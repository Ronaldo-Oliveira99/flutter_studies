import 'package:flutter/material.dart';
import 'screens/explore_screen.dart';
import 'screens/recipes_screen.dart';
import 'screens/grocery_screen.dart';

// 1.2 Sua nova classe estende StatefulWidget.
class Home extends StatefulWidget {
  const Home({super.key});

  @override
  HomeState createState() => HomeState();
}

class HomeState extends State<Home> {

  // TODO: Add state variables and functions
  /* 7.2  _selectedIndex mant√©m o controle de qual guia est√° selecionada no momento. O sublinhado em _selectedIndex
   significa que √© privado. O √≠ndice selecionado √© o estado que est√° sendo rastreado por _HomeState. */
  int _selectedIndex = 0;

 /* 8.2 Aqui, voc√™ define os widgets que ser√£o exibidos em cada guia. Por enquanto, quando voc√™ toca entre os 
    diferentes itens da barra de guias, ele mostra widgets de cont√™iner de cores diferentes. Em breve, 
    voc√™ substituir√° cada um deles por widgets de cart√£o. */
  static List<Widget> pages = <Widget>[

     // TODO: Replace with Card1
    //--Container(color: Colors.red),
    //--const Card1(),
    ExploreScreen(),

    // TODO: Replace with Card2
    //--Container(color: Colors.green),
    //--const Card2(),
    RecipesScreen(),
    
    
    // TODO: Replace with grocery screen

    // TODO: Replace with Card3
    //--Container(color: Colors.blue)
    //--const Card3(),
    //--Container(color: Colors.blue),
    const GroceryScreen(),
  ];

 /* 9.2 Esta fun√ß√£o lida com itens da barra de guias tocados. Aqui, voc√™ define o √≠ndice do item que o 
    usu√°rio pressionou. setState() notifica o framework que o estado deste objeto foi alterado, ent√£o 
    reconstr√≥i este widget internamente */
  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  @override
  Widget build(BuildContext context) {

    /* O widget MaterialApp cont√©m um widget Scaffold, que define o layout e a estrutura do aplicativo. 
      O scaffold tem duas propriedades: um appBar e um body. O t√≠tulo de uma Appbar cont√©m um widget de texto. 
      O corpo tem um widget Center, cuja propriedade filho √© um widget Text. */

    // TODO: Wrap inside a Consumer Widget
    return Scaffold(
      appBar: AppBar(
        title: Text(
          'Fooderlich',

           /* 2.2 O estilo AppBar agora √©: Theme.of(context).textTheme.headline6 em vez de: theme.textTheme.headline6. 
          Theme.of(context) retorna o tema mais pr√≥ximo na √°rvore de widgets. Se o widget tiver um Tema definido, ele 
          o retornar√°. Caso contr√°rio, ele retorna o tema do aplicativo. */
          style: Theme.of(context).textTheme.headline6,
        ),
      ),

       // TODO: Show selected tab
      body: pages[_selectedIndex],

      // TODO: Style the body text
      //body: const Center(child: Text('Let\'s get cooking üë©‚Äçüç≥')),
      //body: Center(
      //     child: Text('Let\'s get cooking üë©‚Äçüç≥',

               // 5.1 Finalmente, adicionado estilo de texto do corpo.
               // 3.2 Assim como na AppBar, voc√™ tamb√©m atualizou o estilo Text para usar o Theme.of(context).
                //style: Theme.of(context).textTheme.headline1)),

      // TODO: Add bottom navigation bar
      // 4.2 Definido um BottomNavigationBar.
      bottomNavigationBar: BottomNavigationBar(

        // 5.2 Defina a cor de sele√ß√£o de um item quando tocado.
        selectedItemColor: Theme.of(context).textSelectionTheme.selectionColor,

         // TODO: Set selected tab bar

        // 10.2 currentIndex informar√° √† barra de navega√ß√£o inferior qual item da barra de guias deve ser destacado.
        currentIndex: _selectedIndex,

         /* 11.2 Quando o usu√°rio toca em um item da barra de guias, ele chama o manipulador _onItemTapped, que 
          atualiza o estado com o √≠ndice correto. Neste caso, ele trava a cor. */
        onTap: _onItemTapped,
        items: const [
          BottomNavigationBarItem(
            icon: Icon(Icons.explore),
            label: 'Explore',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.book),
            label: 'Recipes',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.list),
            label: 'To Buy',
          ),
        ],
      ),
    );
  }
}
